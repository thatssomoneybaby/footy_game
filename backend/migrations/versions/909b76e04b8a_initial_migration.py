"""Initial migration

Revision ID: 909b76e04b8a
Revises: 
Create Date: 2025-08-07 11:50:21.522587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '909b76e04b8a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('club',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('primary_colour', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('secondary_colour', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('logo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_club_name'), 'club', ['name'], unique=False)
    op.create_index(op.f('ix_club_tier'), 'club', ['tier'], unique=False)
    op.create_table('season',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('current_round', sa.Integer(), nullable=False),
    sa.Column('total_rounds', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_season_tier'), 'season', ['tier'], unique=False)
    op.create_index(op.f('ix_season_year'), 'season', ['year'], unique=False)
    op.create_table('fixture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('round', sa.Integer(), nullable=False),
    sa.Column('home_id', sa.Integer(), nullable=False),
    sa.Column('away_id', sa.Integer(), nullable=False),
    sa.Column('played', sa.Boolean(), nullable=False),
    sa.Column('home_score', sa.Integer(), nullable=True),
    sa.Column('away_score', sa.Integer(), nullable=True),
    sa.Column('home_goals', sa.Integer(), nullable=True),
    sa.Column('home_behinds', sa.Integer(), nullable=True),
    sa.Column('away_goals', sa.Integer(), nullable=True),
    sa.Column('away_behinds', sa.Integer(), nullable=True),
    sa.Column('scheduled_date', sa.DateTime(), nullable=True),
    sa.Column('played_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['away_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['home_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('club_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('position', sa.Enum('KPF', 'SMALL_FWD', 'RUCK', 'MID', 'HALF_BACK', 'KP_BACK', 'UTILITY', name='position'), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('kicking', sa.Integer(), nullable=False),
    sa.Column('handball', sa.Integer(), nullable=False),
    sa.Column('marking', sa.Integer(), nullable=False),
    sa.Column('spoiling', sa.Integer(), nullable=False),
    sa.Column('ruck_work', sa.Integer(), nullable=False),
    sa.Column('speed', sa.Integer(), nullable=False),
    sa.Column('endurance', sa.Integer(), nullable=False),
    sa.Column('strength', sa.Integer(), nullable=False),
    sa.Column('decision_making', sa.Integer(), nullable=False),
    sa.Column('leadership', sa.Integer(), nullable=False),
    sa.Column('composure', sa.Integer(), nullable=False),
    sa.Column('potential', sa.Integer(), nullable=False),
    sa.Column('morale', sa.Integer(), nullable=False),
    sa.Column('injured', sa.Boolean(), nullable=False),
    sa.Column('suspended', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_name'), 'player', ['name'], unique=False)
    op.create_table('userprofile',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('selected_club_id', sa.Integer(), nullable=True),
    sa.Column('current_season_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['current_season_id'], ['season.id'], ),
    sa.ForeignKeyConstraint(['selected_club_id'], ['club.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userprofile_email'), 'userprofile', ['email'], unique=True)
    op.create_index(op.f('ix_userprofile_username'), 'userprofile', ['username'], unique=True)
    op.create_table('matchstat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fixture_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('goals', sa.Integer(), nullable=False),
    sa.Column('behinds', sa.Integer(), nullable=False),
    sa.Column('kicks', sa.Integer(), nullable=False),
    sa.Column('handballs', sa.Integer(), nullable=False),
    sa.Column('disposals', sa.Integer(), nullable=False),
    sa.Column('marks', sa.Integer(), nullable=False),
    sa.Column('tackles', sa.Integer(), nullable=False),
    sa.Column('hit_outs', sa.Integer(), nullable=False),
    sa.Column('contested_possessions', sa.Integer(), nullable=False),
    sa.Column('uncontested_possessions', sa.Integer(), nullable=False),
    sa.Column('effective_disposals', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['fixture_id'], ['fixture.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('save',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('blob', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['userprofile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('save')
    op.drop_table('matchstat')
    op.drop_index(op.f('ix_userprofile_username'), table_name='userprofile')
    op.drop_index(op.f('ix_userprofile_email'), table_name='userprofile')
    op.drop_table('userprofile')
    op.drop_index(op.f('ix_player_name'), table_name='player')
    op.drop_table('player')
    op.drop_table('fixture')
    op.drop_index(op.f('ix_season_year'), table_name='season')
    op.drop_index(op.f('ix_season_tier'), table_name='season')
    op.drop_table('season')
    op.drop_index(op.f('ix_club_tier'), table_name='club')
    op.drop_index(op.f('ix_club_name'), table_name='club')
    op.drop_table('club')
    # ### end Alembic commands ###
